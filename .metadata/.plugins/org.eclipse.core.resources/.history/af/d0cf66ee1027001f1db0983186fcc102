package in.mahesh.Rest;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import in.mahesh.Dto.ProductsDto;
import in.mahesh.Mapper.ProductsMapper;
import in.mahesh.Response.ApiResponse;
import in.mahesh.Service.ProductsServiceImp;
import in.mahesh.entity.Products;
import in.mahesh.properties.AppProperties;
import io.swagger.v3.oas.annotations.parameters.RequestBody;

@RestController
public class ProductRestController {
	
	@Autowired
	private ProductsServiceImp service;
	
	@Autowired
	private AppProperties props;
	
	@PostMapping("/product")
	public ResponseEntity<ApiResponse<ProductsDto>> addProducts(@RequestBody ProductsDto productsDto ,  @RequestParam("file") MultipartFile file){
		ProductsDto product = service.addProduct(productsDto, file);
		ApiResponse<ProductsDto> resp = new ApiResponse<>();
		if(product != null) {
			resp.setStatusCode(201);
			resp.setMessage("product Added Sucesfully");
			resp.setData(product);
		}else{
			resp.setStatusCode(500);
			resp.setMessage("product  Error ");
		}
		
		return new ResponseEntity<ApiResponse<ProductsDto>>(resp, HttpStatus.CREATED);
	}
	
	
	@PutMapping("/product/{productId}")
	public ResponseEntity<ApiResponse<ProductsDto>> updateProduct(@RequestBody ProductsDto productsDto , @PathVariable("productId") Integer productId ,@RequestParam("file") MultipartFile file){
		ProductsDto updateProduct = service.updateProduct(productId, productsDto, file);
		ApiResponse<ProductsDto> resp = new ApiResponse<>();
		if(updateProduct != null) {
			resp.setStatusCode(201);
			resp.setMessage("product updated Sucesfully");
			resp.setData(updateProduct);
		}else{
			resp.setStatusCode(500);
			resp.setMessage("product  updated Error ");
		}
		return new ResponseEntity<ApiResponse<ProductsDto>>(resp, HttpStatus.CREATED);
	}
	
	
	
	public ResponseEntity<ApiResponse<ProductsDto>> getAllProducts(){
		List<ProductsDto> allProducts = service.getAllProducts();
		ApiResponse<ProductsDto> resp = new ApiResponse<>();
		if(allProducts != null) {
			resp.setStatusCode(201);
			resp.setMessage("retrived All product Sucesfully");
			resp.setData(allProducts);
		}else{
			resp.setStatusCode(500);
			resp.setMessage("products Retired Error ");
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
